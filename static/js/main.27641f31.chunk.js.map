{"version":3,"sources":["styles.ts","components/Error/styles.ts","components/Error/index.tsx","pages/Home/styles.ts","components/Card/styles.ts","components/Button/styles.ts","components/Button/index.tsx","components/Card/index.tsx","components/Loading/styles.ts","components/Loading/index.tsx","queries/index.ts","pages/Home/index.tsx","pages/PokemonDetail/styles.ts","pages/PokemonDetail/index.tsx","pages/MyPokemon/styles.ts","routes.tsx","pages/MyPokemon/index.tsx","components/Navbar/styles.ts","components/Navbar/NavbarItems.ts","components/Navbar/index.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","css","Container","styled","div","Error","title","to","Header","Title","span","Subtitle","Owned","ContentContainer","ButtonContainer","PageButton","button","CardContainer","CardImage","img","CardName","CardLabel","color","fontColor","margin","ButtonLabel","label","Button","onClick","text","className","Card","name","nickname","image","toUpperCase","src","Loading","GET_POKEMON_DETAIL","gql","GET_POKEMONS","Home","useState","myPokemon","setMyPokemon","pageOffset","setPageOffset","useEffect","sessionStorage","getItem","setItem","JSON","stringify","parseInt","parse","gqlVariables","limit","offset","useLazyQuery","variables","getPokemons","loading","error","data","toString","length","disabled","pokemons","count","results","map","pokemon","id","PokemonName","PokemonSprites","PokemonTypes","Type","LoadingContainer","Failed","PokemonMoveContainer","PokemonMoves","Move","ModalContainer","ModalText","ModalInput","input","PokemonDetail","match","catchLoading","setCatchLoading","open","setOpen","failed","setFailed","emptyNickname","setEmptyNickname","setNickname","closeModal","params","useQuery","sprites","front_default","types","type","style","chance","Math","floor","random","setTimeout","o","moves","move","overlayStyle","background","closeOnDocumentClick","onClose","onChange","e","target","value","placeholder","undefined","find","prevPokemon","EmptyContainer","routes","path","exact","component","index","findIndex","currentPokemon","filter","i","removePokemon","Nav","NavLogo","MenuBar","FaIcons","DesktopMenu","MenuItems","NavLink","MobileNav","isActive","MobileMenuClose","MenuClose","AiIcons","MobileMenuItems","NavbarItems","Navbar","showNav","setShowNav","toggleMenu","item","App","styles","route","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.27641f31.chunk.js","sourcesContent":["import { css } from '@emotion/react';\n\nexport const GlobalStyles = css`\n    @import url('https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n    * {\n        font-family: 'Work Sans', sans-serif;\n        margin: 0;\n        padding: 0;\n    };\n    body {\n        background-color: #171717;\n    };\n`;\n","import styled from '@emotion/styled/';\n\nexport const Container = styled.div`\n    height: 100vh;\n    color: #EDEDED;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    a {\n        color: #EDEDED;\n    }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n} from './styles';\n\nconst Error = () : JSX.Element => (\n  <Container title=\"Error\">\n    <h1>\n      PAGE NOT FOUND OR CONNECTION ERROR\n    </h1>\n    <Link to=\"/\">\n      <h3>\n        Click me to go home!\n      </h3>\n    </Link>\n  </Container>\n);\n\nexport default Error;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    padding: 20px;\n    color: #EDEDED;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: #171717;\n`;\n\nexport const Header = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Title = styled.span`\n    font-size: 48px;\n    font-weight: 900;\n    margin: 0;\n`;\n\nexport const Subtitle = styled.span`\n    font-size: 24px;\n`;\n\nexport const Owned = styled.span`\n    font-size: 14px;\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const ButtonContainer = styled.div`\n    max-width: 100%;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const PageButton = styled.button`\n    border: 0;\n    width: 75px;\n    border-radius: 25px;\n    background-color: #EDEDED;\n    padding: 5px;\n    font-weight: 500;\n    cursor: pointer;\n`;\n\nexport const CardContainer = styled.div`\n    max-width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    width: 275px;\n    border: 3px solid #444444;\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    color: #EDEDED;\n    margin: 20px;\n`;\n\nexport const CardImage = styled.img`\n    background-color: #EDEDED;\n    width: 100%;\n    height: 250px;\n    border-radius: 25px;\n    margin: 10px 0 20px 0;\n`;\n\nexport const CardName = styled.span`\n    font-size: 32px;\n    font-weight: 700;\n`;\n\nexport const CardLabel = styled.span`\n    font-size: 14px;\n`;\n","import styled from '@emotion/styled';\nimport { IState } from '../../interfaces';\n\nexport const Container = styled.button<IState['buttonStyleComponent']>`\n    width: 100%;\n    background-color: ${({ color }) => (color || 'white')};\n    color: ${({ fontColor }) => (fontColor || '#000')};\n    border: none;\n    padding: 10px;\n    border-radius: 100px;\n    cursor: pointer;\n    margin: ${({ margin }) => (margin || 0)};\n\n    @media only screen and (min-width: 420px) {\n        &.catch-button {\n            width: 350px;\n        }\n    }\n`;\n\nexport const ButtonLabel = styled.label`\n    background-color: transparent;\n    font-size: 16px;\n    font-weight: 500;\n`;\n","import React from 'react';\nimport {\n  Container,\n  ButtonLabel,\n} from './styles';\nimport { IState } from '../../interfaces';\n\nconst Button : React.FC<IState['buttonComponent']> = ({\n  onClick,\n  margin,\n  text,\n  color,\n  fontColor,\n  className,\n}) => (\n  <Container\n    onClick={onClick}\n    className={className}\n    margin={margin}\n    color={color}\n    fontColor={fontColor}\n    title=\"Button\"\n  >\n    <ButtonLabel>\n      {text}\n    </ButtonLabel>\n  </Container>\n);\n\nexport default Button;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  CardImage,\n  CardName,\n  CardLabel,\n} from './styles';\nimport Button from '../Button';\nimport { IState } from '../../interfaces';\n\nconst Card: React.FC<IState['cardComponent']> = ({\n  name,\n  onClick,\n  nickname,\n  image,\n}) => (\n  <Container title=\"Card\">\n    <CardLabel>\n      Pokemon Name:\n    </CardLabel>\n    <CardName>\n      { name.toUpperCase() }\n    </CardName>\n    {nickname\n                && (\n                <>\n                  <CardLabel>\n                    Nickname:\n                  </CardLabel>\n                  <CardName>\n                    { nickname.toUpperCase() }\n                  </CardName>\n                </>\n                )}\n    <CardImage src={image} />\n    {nickname\n      ? (\n        <Button\n          margin=\"0\"\n          text=\"Release\"\n          color=\"#DA0037\"\n          fontColor=\"#EDEDED\"\n          onClick={onClick}\n        />\n      )\n      : (\n        <Link to={`/pokemon/${name}`}>\n          <Button\n            margin=\"0\"\n            text=\"Details\"\n            color=\"#EDEDED\"\n            fontColor=\"#171717\"\n          />\n        </Link>\n      )}\n\n  </Container>\n);\n\nexport default Card;\n","import styled from '@emotion/styled/';\n\nexport const Container = styled.div`\n    height: 100vh;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #171717;\n`;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport {\n  Container,\n} from './styles';\n\nconst Loading = () : JSX.Element => (\n  <Container title=\"Loading\">\n    <PropagateLoader color=\"#EDEDED\" />\n  </Container>\n);\n\nexport default Loading;\n","import { gql } from '@apollo/client';\n\nexport const GET_POKEMON_DETAIL = gql`\nquery pokemon($name: String!) {\n    pokemon(name: $name) {\n        id\n        name\n        sprites {\n            front_default\n        }\n        moves {\n            move {\n                name\n            }\n        }\n        types {\n            type {\n                name\n            }\n        }\n    }\n}`;\n\nexport const GET_POKEMONS = gql`\nquery pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    results {\n      id\n      name\n      image\n    }\n  }\n}`;\n","import React, { useState, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport {\n  Container,\n  Header,\n  Title,\n  Subtitle,\n  Owned,\n  ContentContainer,\n  ButtonContainer,\n  CardContainer,\n  PageButton,\n} from './styles';\nimport Card from '../../components/Card';\nimport Loading from '../../components/Loading';\nimport { GET_POKEMONS } from '../../queries';\nimport { IState } from '../../interfaces';\nimport Error from '../../components/Error';\n\nconst Home = () : JSX.Element => {\n  const [myPokemon, setMyPokemon] = useState<IState['myPokemonState']>([]);\n  const [pageOffset, setPageOffset] = useState<number>(0);\n\n  useEffect(() => {\n    if (!sessionStorage.getItem('myPokemon')) {\n      sessionStorage.setItem('myPokemon', JSON.stringify([]));\n    }\n\n    if (!sessionStorage.getItem('pageOffset')) {\n      sessionStorage.setItem('pageOffset', '0');\n    }\n\n    setPageOffset(parseInt(sessionStorage.getItem('pageOffset')!));\n    setMyPokemon(JSON.parse(sessionStorage.getItem('myPokemon')!));\n  }, []);\n\n  const gqlVariables = {\n    limit: 12,\n    offset: pageOffset,\n  };\n\n  const [getPokemons, { loading, error, data }] = useLazyQuery(GET_POKEMONS, {\n    variables: gqlVariables,\n  });\n\n  useEffect(() => {\n    getPokemons();\n  }, [getPokemons]);\n\n  useEffect(() => {\n    sessionStorage.setItem('pageOffset', pageOffset.toString());\n  }, [pageOffset]);\n\n  if (loading) return <Loading />;\n\n  if (error) return <Error />;\n\n  return (\n    <>\n      <Container title=\"Homepage\">\n        <Header>\n          <Title>\n            POKEAPP\n          </Title>\n          <Subtitle>\n            Catch em all!\n          </Subtitle>\n          <Owned>\n            Pokemon Owned:\n            {' '}\n            {myPokemon.length}\n          </Owned>\n        </Header>\n        <ContentContainer>\n          <ButtonContainer>\n            <PageButton\n              disabled={pageOffset === 0}\n              onClick={() => {\n                setPageOffset(pageOffset - 12);\n              }}\n            >\n              Prev\n            </PageButton>\n            <PageButton\n              disabled={!!(data && pageOffset === data.pokemons.count)}\n              onClick={() => {\n                setPageOffset(pageOffset + 12);\n              }}\n            >\n              Next\n            </PageButton>\n          </ButtonContainer>\n          <CardContainer>\n            {!loading && data\n                            && data.pokemons.results.map((pokemon: IState['pokemonCardMap']) => (\n                              <Card\n                                key={pokemon.id}\n                                name={pokemon.name}\n                                image={pokemon.image}\n                              />\n                            ))}\n          </CardContainer>\n          <ButtonContainer>\n            <PageButton\n              disabled={pageOffset === 0}\n              onClick={() => {\n                setPageOffset(pageOffset - 12);\n              }}\n            >\n              Prev\n            </PageButton>\n            <PageButton\n              disabled={!!(data && pageOffset === data.pokemons.count)}\n              onClick={() => {\n                setPageOffset(pageOffset + 12);\n              }}\n            >\n              Next\n            </PageButton>\n          </ButtonContainer>\n        </ContentContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    padding: 20px;\n    color: #EDEDED;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: #171717;\n`;\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-width: 350px;\n`;\n\nexport const PokemonName = styled.span`\n    font-size: 48px;\n    font-weight: 700;\n`;\n\nexport const PokemonSprites = styled.img`\n    background-color: #EDEDED;\n    margin: 20px 0;\n    border-radius: 25px;\n    width: 300px;\n    height: 300px;\n`;\n\nexport const PokemonTypes = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    max-width: 100%;\n    flex-wrap: wrap;\n`;\n\nexport const Type = styled.div`\n    display: flex;\n    justify-content: center;\n    font-weight: 500;\n    align-items: center;\n    border: 2px solid #444444;\n    border-radius: 100px;\n    padding: 10px;\n    margin: 3px;\n    flex-grow: 1;\n`;\n\nexport const LoadingContainer = styled.div`\n    margin: 40px 0;\n    align-self: center;\n`;\n\nexport const Failed = styled.div`\n    max-width: 350px;\n    text-align: center;\n    margin-bottom: 20px;\n\n    span {\n        align-self: flex-start;\n    }\n\n    &.failed-modal {\n        margin: 0;\n    }\n`;\n\nexport const PokemonMoveContainer = styled.div`\n    \n    h2 {\n        align-self: flex-start;\n    }\n`;\n\nexport const PokemonMoves = styled(PokemonTypes)`\n    align-items: flex-start;\n    max-width: 585px;\n    height: 200px;\n    overflow: scroll;\n    border: 2px solid #444444;\n    padding: 20px;\n`;\n\nexport const Move = styled(Type)`\n    font-size: 16px;\n    background-color: #EDEDED;\n    color: #171717;\n    border: none;\n\n    span {\n        background-color: transparent;\n    }\n`;\n\nexport const ModalContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    background: #EDEDED;\n    max-width: 350px; \n    margin: 10px;\n    padding: 10px;\n`;\n\nexport const ModalText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    h2 {\n        margin-bottom: 5px;\n    }\n`;\n\nexport const ModalInput = styled.input`\n    margin: 10px;\n    padding: 5px;\n    width: 95%;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport { useQuery } from '@apollo/client';\nimport {\n  Container,\n  Header,\n  PokemonName,\n  PokemonSprites,\n  PokemonTypes,\n  Type,\n  LoadingContainer,\n  Failed,\n  PokemonMoveContainer,\n  PokemonMoves,\n  Move,\n  ModalContainer,\n  ModalText,\n  ModalInput,\n} from './styles';\nimport Button from '../../components/Button';\nimport Loading from '../../components/Loading';\nimport Error from '../../components/Error';\nimport { GET_POKEMON_DETAIL } from '../../queries';\nimport { IState } from '../../interfaces';\n\nconst PokemonDetail = ({ match }: RouteComponentProps<{name:string}>) : JSX.Element => {\n  const [myPokemon, setMyPokemon] = useState<IState['myPokemonState']>([]);\n  const [catchLoading, setCatchLoading] = useState<boolean>(false);\n  const [open, setOpen] = useState<boolean>(false);\n  const [failed, setFailed] = useState<boolean>(false);\n  const [emptyNickname, setEmptyNickname] = useState<boolean>(false);\n  const [nickname, setNickname] = useState<string>('');\n  const closeModal = () : void => setOpen(false);\n\n  useEffect(() => {\n    if (!sessionStorage.getItem('myPokemon')) {\n      sessionStorage.setItem('myPokemon', JSON.stringify([]));\n    }\n    setMyPokemon(JSON.parse(sessionStorage.getItem('myPokemon')!));\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setItem('myPokemon', JSON.stringify(myPokemon));\n  }, [myPokemon]);\n\n  const gqlVariables = {\n    name: match.params.name,\n  };\n\n  const { loading, error, data } = useQuery(GET_POKEMON_DETAIL, {\n    variables: gqlVariables,\n  });\n\n  const catchPokemon = () : void => {\n    setFailed(false);\n    setCatchLoading(true);\n    const chance = Math.floor(Math.random() * 2);\n    setTimeout(() => {\n      if (chance === 0) {\n        setCatchLoading(false);\n        setOpen((o) => !o);\n      } else {\n        setCatchLoading(false);\n        setFailed(true);\n      }\n    }, 1000);\n  };\n\n  const addPokemon = () : void => {\n    setEmptyNickname(false);\n    if (nickname !== '' && myPokemon.find((e) => e.nickname === nickname) === undefined) {\n      setMyPokemon((prevPokemon) => [...prevPokemon, {\n        id: data.pokemon.id,\n        name: data.pokemon.name,\n        nickname,\n        image: data.pokemon.sprites.front_default,\n      }]);\n      closeModal();\n    } else {\n      setEmptyNickname(true);\n    }\n  };\n\n  if (loading) return <Loading />;\n\n  if ((!loading && data.pokemon.id === null) || error) return <Error />;\n\n  return (\n    <>\n      <Container>\n        <Header>\n          <PokemonName>\n            {data.pokemon.name.toUpperCase()}\n          </PokemonName>\n          <PokemonSprites src={data.pokemon.sprites.front_default} />\n          <PokemonTypes>\n            {data.pokemon.types.map((pokemon: IState['pokemonTypeMap']) => (\n              <Type>\n                <span>\n                  {pokemon.type.name.toUpperCase()}\n                </span>\n              </Type>\n            ))}\n          </PokemonTypes>\n        </Header>\n        {catchLoading\n          ? (\n            <LoadingContainer style={{}}>\n              <PropagateLoader color=\"#EDEDED\" />\n            </LoadingContainer>\n          )\n          : (\n            <Button\n              className=\"catch-button\"\n              margin=\"20px 0\"\n              text=\"Catch!\"\n              color=\"#DA0037\"\n              fontColor=\"#EDEDED\"\n              onClick={catchPokemon}\n            />\n          )}\n        {failed\n                    && (\n                    <Failed>\n                      <span>\n                        The pokemon ran away :(\n                        {' '}\n                        <br />\n                        Try again!\n                      </span>\n                    </Failed>\n                    )}\n        <PokemonMoveContainer>\n          <h2>\n            Move List\n          </h2>\n          <PokemonMoves>\n            {data.pokemon.moves.map((pokemon: IState['pokemonMoveMap']) => (\n              <Move>\n                <span>\n                  {pokemon.move.name.toUpperCase()}\n                </span>\n              </Move>\n            ))}\n          </PokemonMoves>\n        </PokemonMoveContainer>\n      </Container>\n\n      <Popup\n        overlayStyle={{ background: 'rgba(0,0,0,0.5)' }}\n        open={open}\n        closeOnDocumentClick={false}\n        onClose={closeModal}\n      >\n        <ModalContainer>\n          <ModalText>\n            <h2>\n              Caught!\n            </h2>\n            <span>\n              Congratulations, you caught the wild\n              {' '}\n              <b>{data.pokemon.name.toUpperCase()}</b>\n              ! You can give it a name to add it to your pokemon list or release it if you want.\n            </span>\n          </ModalText>\n          <ModalInput\n            onChange={(e) => setNickname(e.target.value)}\n            placeholder=\"The name is...\"\n          />\n          {emptyNickname\n                        && (\n                        <Failed className=\"failed-modal\">\n                          <span>\n                            Pokemon name cannot be empty or pokemon name already exists!\n                          </span>\n                        </Failed>\n                        )}\n          <Button\n            margin=\"10px 0\"\n            text=\"Accept Name\"\n            color=\"#171717\"\n            fontColor=\"#EDEDED\"\n            onClick={addPokemon}\n          />\n          <Button\n            margin=\"10px 0\"\n            text=\"Release\"\n            color=\"#DA0037\"\n            fontColor=\"#EDEDED\"\n            onClick={closeModal}\n          />\n        </ModalContainer>\n      </Popup>\n    </>\n  );\n};\n\nexport default PokemonDetail;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    padding: 20px;\n    color: #EDEDED;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: #171717;\n`;\n\nexport const Header = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Title = styled.span`\n    font-size: 48px;\n    font-weight: 900;\n    margin: 0;\n`;\n\nexport const Subtitle = styled.span`\n    font-size: 24px;\n`;\n\nexport const Owned = styled.span`\n    font-size: 14px;\n`;\n\nexport const CardContainer = styled.div`\n    max-width: 1366px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const EmptyContainer = styled.div`\n    height: 90vh;\n    background-color: #171717;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n`;\n","import Error from './components/Error';\nimport {\n  Home,\n  PokemonDetail,\n  MyPokemon,\n} from './pages';\n\nexport const routes = [\n  {\n    name: 'Home',\n    path: '/',\n    exact: true,\n    component: Home,\n  },\n  {\n    name: 'My Pokemon',\n    path: '/my-pokemon',\n    exact: false,\n    component: MyPokemon,\n  },\n  {\n    name: 'Pokemon Detail',\n    path: '/pokemon/:name',\n    exact: false,\n    component: PokemonDetail,\n  },\n  {\n    name: 'Error Page',\n    exact: false,\n    component: Error,\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Header,\n  Title,\n  Owned,\n  CardContainer,\n  EmptyContainer,\n} from './styles';\nimport Card from '../../components/Card';\n\nconst MyPokemon = () : JSX.Element => {\n  const [myPokemon, setMyPokemon] = useState<{\n        id: number,\n        name: string,\n        nickname: string,\n        image: string\n    }[]>([]);\n\n  useEffect(() => {\n    if (!sessionStorage.getItem('myPokemon')) {\n      sessionStorage.setItem('myPokemon', JSON.stringify([]));\n    }\n    setMyPokemon(JSON.parse(sessionStorage.getItem('myPokemon')!));\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setItem('myPokemon', JSON.stringify(myPokemon));\n  }, [myPokemon]);\n\n  const removePokemon = (pokemon : string) : void => {\n    const index = myPokemon.findIndex((e) => e.nickname === pokemon);\n    setMyPokemon((currentPokemon) => currentPokemon.filter((e, i) => i !== index));\n  };\n\n  return (\n    <Container title=\"MyPokemon\">\n      <Header>\n        <Title>\n          My Pokemons\n        </Title>\n        <Owned>\n          Pokemon Owned:\n          {' '}\n          {myPokemon.length}\n        </Owned>\n      </Header>\n      <CardContainer>\n        {myPokemon.length !== 0\n          ? myPokemon.map((pokemon: {\n                        id: number,\n                        name: string,\n                        nickname: string,\n                        image: string\n                    }) => (\n                      <Card\n                        key={pokemon.nickname}\n                        name={pokemon.name}\n                        nickname={pokemon.nickname}\n                        image={pokemon.image}\n                        onClick={() => { removePokemon(pokemon.nickname); }}\n                      />\n          ))\n          : (\n            <EmptyContainer>\n              <h1>\n                No pokemon yet :(\n                {' '}\n                <br />\n                {' '}\n                Start catching some!\n              </h1>\n            </EmptyContainer>\n          )}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default MyPokemon;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\n\nexport const Nav = styled.div`\n    background-color: #EDEDED;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 2rem 0 2rem;\n`;\n\nexport const NavLogo = styled.span`\n    font-size: 48px;\n    font-weight: 900;\n    margin: 0;\n`;\n\nexport const MenuBar = styled(FaIcons.FaBars)`\n    font-size: 2rem;\n    background: none;\n    color: #171717;\n\n    @media only screen and (min-width: 660px) {\n        display: none;\n    }\n`;\n\nexport const DesktopMenu = styled.div`\n    width: 15rem;\n    color: #ffffff;\n    justify-content: space-between;\n    display: none;\n\n    @media only screen and (min-width: 660px) {\n        display: flex;\n    }\n`;\n\nexport const MenuItems = styled(NavLink)`\n    padding: 0.75rem;\n    border-radius: 0.25rem;\n    color: #171717;\n    text-decoration: none;\n\n    &:hover {\n        background-color: #171717;\n        color: #EDEDED;\n    }\n\n    &.active {\n        background-color: #171717;\n        color: #EDEDED;\n    }\n`;\n\nexport const MobileNav = styled.div<{isActive:boolean}>`\n    background-color: #18191A;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    top: ${({ isActive }) => (isActive ? '0%' : '-200%')};\n    transition: 750ms;\n\n    @media only screen and (min-width: 660px) {\n        display: none;\n    }\n`;\n\nexport const MobileMenuClose = styled.div`\n    background-color: #18191A;\n    width: 100%;\n    height: 80px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n`;\n\nexport const MenuClose = styled(AiIcons.AiOutlineClose)`\n    margin-right: 2rem;\n    font-size: 2rem;\n    background: none;\n    color: #ffffff;\n`;\n\nexport const MobileMenuItems = styled(NavLink)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 8px 16px 8px 16px;\n    height: 45px;\n    text-decoration: none;\n    color: #EDEDED;\n    border-radius: 0.25rem;\n\n    &:hover {\n        background-color: #EDEDED;\n        color: #171717;\n    }\n\n    &.active {\n        background-color: #EDEDED;\n        color: #171717;\n    }\n`;\n","export const NavbarItems = [\n  {\n    name: 'Home',\n    path: '/',\n    exact: true,\n  },\n  {\n    name: 'My Pokemons',\n    path: '/my-pokemon',\n    exact: false,\n  },\n];\n","import React, { useState } from 'react';\nimport {\n  Nav,\n  NavLogo,\n  MenuBar,\n  DesktopMenu,\n  MenuItems,\n  MobileNav,\n  MobileMenuClose,\n  MenuClose,\n  MobileMenuItems,\n} from './styles';\nimport { NavbarItems } from './NavbarItems';\n\nconst Navbar = (): JSX.Element => {\n  const [showNav, setShowNav] = useState<boolean>(false);\n\n  const toggleMenu = ():void => {\n    setShowNav(!showNav);\n  };\n\n  return (\n    <>\n      <Nav title=\"Navbar\">\n        <NavLogo>\n          POKEAPP\n        </NavLogo>\n        <MenuBar onClick={toggleMenu} />\n        <DesktopMenu>\n          { NavbarItems.map((item):JSX.Element => (\n            <MenuItems key={item.name} exact={item.exact} to={item.path}>\n              {item.name}\n            </MenuItems>\n          )) }\n        </DesktopMenu>\n      </Nav>\n      <MobileNav isActive={showNav}>\n        <MobileMenuClose>\n          <MenuClose onClick={toggleMenu} />\n        </MobileMenuClose>\n        { NavbarItems.map((item):JSX.Element => (\n          <MobileMenuItems key={item.name} onClick={toggleMenu} exact={item.exact} to={item.path}>\n            {item.name}\n          </MobileMenuItems>\n        )) }\n      </MobileNav>\n    </>\n  );\n};\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Global } from '@emotion/react';\nimport { GlobalStyles } from './styles';\nimport { routes } from './routes';\nimport Navbar from './components/Navbar';\n\nfunction App() : JSX.Element {\n  return (\n    <>\n      <Global\n        styles={GlobalStyles}\n      />\n      <Router>\n        <Navbar />\n        <Switch>\n          {routes.map((route) => (\n            <Route\n              key={route.name}\n              exact={route.exact}\n              path={route.path}\n              component={route.component}\n            />\n          ))}\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from '@apollo/client';\nimport App from './App';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokeapi.graphcdn.app/',\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}